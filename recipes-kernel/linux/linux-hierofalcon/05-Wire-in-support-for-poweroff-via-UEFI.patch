From 3ef62ca9476921b6161d957ebe81bf3bd0775f5c Mon Sep 17 00:00:00 2001
From: Adrian Calianu <adrian.calianu@enea.com>
Date: Mon, 23 Feb 2015 17:10:32 +0100
Subject: [PATCH 1/1] Wire in support for poweroff via UEFI.

If UEFI Runtime Services are available, they are preferred over direct
PSCI calls or other methods to reset the system. For the reset case,
we need to hook into machine_restart(), as the arm_pm_restart function
pointer may be overwritten by modules.

Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Signed-off-by: Adrian Calianu <adrian.calianu@enea.com>
---
 arch/arm64/kernel/efi.c | 37 +++++++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/arch/arm64/kernel/efi.c b/arch/arm64/kernel/efi.c
index 4b9b1fc..ed0e744 100644
--- a/arch/arm64/kernel/efi.c
+++ b/arch/arm64/kernel/efi.c
@@ -500,3 +500,40 @@ static int __init arm64_dmi_init(void)
 	return 0;
 }
 core_initcall(arm64_dmi_init);
+
+/*
+ * If nothing else is handling pm_power_off, use EFI
+ *
+ * When Guenter Roeck's power-off handler call chain patches land,
+ * we just need to return true unconditionally.
+ */
+bool efi_poweroff_required(void)
+{
+    return pm_power_off == NULL;
+}
+
+static int arm64_efi_restart(struct notifier_block *this,
+               unsigned long mode, void *cmd)
+{
+    efi_reboot(reboot_mode, cmd);
+    return NOTIFY_DONE;
+}
+
+static struct notifier_block arm64_efi_restart_nb = {
+    .notifier_call = arm64_efi_restart,
+    .priority = INT_MAX,
+};
+
+static int __init arm64_register_efi_restart(void)
+{
+    int ret = 0;
+
+    if (efi_enabled(EFI_RUNTIME_SERVICES)) {
+        ret = register_restart_handler(&arm64_efi_restart_nb);
+        if (ret)
+            pr_err("%s: cannot register restart handler, %d\n",
+                   __func__, ret);
+    }
+    return ret;
+}
+late_initcall(arm64_register_efi_restart);
-- 
1.9.1

